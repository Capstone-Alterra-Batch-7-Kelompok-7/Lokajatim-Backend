basePath: /
definitions:
  base.BaseResponse:
    properties:
      data:
        description: Response data for success
      error_data:
        description: Detailed error data for failure
      message:
        type: string
      status:
        type: boolean
    type: object
  request.EventRequest:
    description: EventRequest is the request for creating or updating an event
    properties:
      capacity:
        type: integer
      date_time:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
      price:
        type: integer
      url_photo:
        type: string
    type: object
  request.LoginRequest:
    description: LoginRequest is the request for the login endpoint
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.RegisterRequest:
    description: RegisterRequest is the request for the register endpoint
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  response.EventResponse:
    description: EventResponse is the response for event data retrieval
    properties:
      capacity:
        type: integer
      date_time:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      price:
        type: integer
      url_photo:
        type: string
    type: object
  response.LoginResponse:
    description: LoginResponse is the response for the Login controller
    properties:
      email:
        type: string
      id:
        type: integer
      nama:
        type: string
      token:
        type: string
    type: object
  response.RegisterResponse:
    description: RegisterResponse is the response for the Register controller
    properties:
      email:
        type: string
      id:
        type: integer
      nama:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the API documentation for Lokajatim.
  title: Lokajatim API
  version: "1.0"
paths:
  /events:
    get:
      consumes:
      - application/json
      description: Get a list of all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.EventResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Get All Events
      tags:
      - Event
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Event data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.EventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.EventResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Create Event
      tags:
      - Event
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.BaseResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Delete Event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Get details of an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.EventResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Get Event by ID
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update an existing event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated event data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.EventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.EventResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Update Event
      tags:
      - Event
  /login:
    post:
      consumes:
      - application/json
      description: User login endpoint
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Login
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: User registration endpoint
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.BaseResponse'
      summary: Register
      tags:
      - Auth
swagger: "2.0"
